name: myproject

services:
  django:
    build: ./backend
    container_name: django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/usr/src/app
    ports:
      - $IP_ADDRESS:8000:8000
    environment:
      PYTHONUNBUFFERED:
    env_file:
      - .env 
    depends_on:
      - pgdb
      - migration
      - minio
      - redis

  migration:
    build: ./backend
    container_name: migration
    command: bash -c "python manage.py makemigrations && python manage.py migrate --noinput && python manage.py fill_db"
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - pgdb

  pgdb:
    image: postgres:16.0-alpine
    container_name: pgdb
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - type: volume
        source: pgdbdata
        target: /var/lib/postgresql/data

  minio:
    hostname: minio/minio:latest
    image: quay.io/minio/minio:RELEASE.2022-10-15T19-57-03Z
    container_name: minio
    command: server --console-address ":9001" /data/
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    expose:
      - "9000"
      - "9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - minio-data:/data

  createbucket:
    image: minio/mc:latest
    container_name: createbucket
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add --api s3v4 s3 http://minio:9000 minio minio123;
      /usr/bin/mc mb s3/images;
      /usr/bin/mc anonymous set public s3/images;
      "

  nginx:
    image: nginx:1.19.2-alpine
    container_name: nginx
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - $IP_ADDRESS:9000:9000
      - $IP_ADDRESS:9001:9001
    env_file:
      - .env 
    depends_on:
      - minio

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - $IP_ADDRESS:6379:6379
    volumes:
      - ./:/usr/src/app/d–∞ta:/root/redis
      - ./:/usr/src/app/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=my-password
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    env_file:
      - .env

  react_native_app:
    container_name: react_native_app
    build:
      context: ./react_native_app
      args:
        - NODE_ENV=development
        - IP_ADDRESS=$IP_ADDRESS
    env_file:
      - .env
    tty: true
    ports:
      - '8081:8081'
    volumes:
      - native_app-data:/opt/my-app/app/node_modules

volumes:
  pgdbdata: null
  minio-data:
  native_app-data: